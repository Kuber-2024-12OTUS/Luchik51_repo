apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "otus.fullname" . }}
  labels:
    {{- include "otus.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "otus.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "otus.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "otus.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-config
          image: busybox
          command: ['sh', '-c', "echo '<h1>Hello my Friend</h1>' > /init/index.html"]
          volumeMounts:
          - name: nginx-pvc-star
            mountPath: /init
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          lifecycle:
            postStart:
              exec:
                #command: ["/bin/sh","-c","echo 'server { listen 8000; location / { root /homework; index index.html; } }' > /etc/nginx/conf.d/default.conf; nginx -s reload"]
                command: 
                - "sh"
                - "-c"
                - echo 'server { listen 8000; location / { root /homework; index index.html; } location = /stats { stub_status; } }' > /etc/nginx/conf.d/default.conf
                - nginx -s reload
                - 'curl -k -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" https://kubernetes.default.svc.cluster.local/metrics > /homework/metrics.html'
            preStop:
              exec:
                command: ["/bin/sh","-c","rm /homework/index.html"]
          {{- if .Values.probes.livenessProbeenabled }}
          livenessProbe:
            {{- toYaml .Values.probes.livenessProbe | nindent 10 }}
          {{- end }}
          #readinessProbe:
          #  {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        - name: nginx-exporter
          image: 'nginx/nginx-prometheus-exporter:1.4.1'
          args:
          - '--nginx.scrape-uri=http://nginx-deployment:8000/stats'
          resources:
            limits:
              memory: 64Mi
              cpu: 300m
          ports:
          - containerPort: 9113
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1